import streamlit as st
from gemini_utility import get_gemini_response, configure_api_key

# Configura a API Key do Gemini usando st.secrets (boa pr√°tica de seguran√ßa)
configure_api_key()

# --- Configura√ß√µes da P√°gina ---
st.set_page_config(page_title="GATEBOT - Seu Assistente de IA", page_icon="ü§ñ")

# --- CSS Personalizado para a Sidebar ---
st.markdown("""
<style>
    /* Estilo para a cor de fundo da sidebar. Voc√™ pode mudar o #262730 para outra cor. */
    .st-emotion-cache-nahz7x {
        background-color: #262730;
    }
    /* Estilo para o texto do sidebar. Voc√™ pode mudar a cor e o tamanho da fonte. */
    .st-emotion-cache-1pxazr6 {
        color: white;
    }
    /* Estilo para bot√µes na sidebar (cor do texto e do fundo ao passar o mouse) */
    .st-emotion-cache-1km1mho button {
        color: white; /* Cor do texto do bot√£o */
        background-color: #4A4A4A; /* Cor de fundo do bot√£o */
        width: 100%; /* Faz o bot√£o ocupar toda a largura da sidebar */
        margin-bottom: 5px; /* Espa√ßamento entre os bot√µes */
        border: none; /* Remove a borda padr√£o do bot√£o */
        text-align: left; /* Alinha o texto do bot√£o √† esquerda */
        padding-left: 10px; /* Adiciona um pequeno padding √† esquerda */
    }
    .st-emotion-cache-1km1mho button:hover {
        background-color: #6A6A6A; /* Cor de fundo do bot√£o ao passar o mouse */
        color: white; /* Cor do texto ao passar o mouse */
    }
</style>
""", unsafe_allow_html=True)


# --- T√≠tulo e Imagem de Capa (√Årea Principal) ---
st.title("GATEBOT")
st.header("Seu Assistente de IA com Google Gemini")

# A imagem de capa do GATEBOT, agora hospedada no GitHub e funcionando!
st.image("https://raw.githubusercontent.com/brun372/gatebot-online/main/B5w10V3.PNG", caption="Seu amigo digital para qualquer desafio", width=300)

# --- Mensagem de Boas-Vindas (√Årea Principal) ---
st.write("Bem-vindo ao GATEBOT!")
st.write("‚≠ê Ei! Tudo bem? Eu sou o GATEBOT, seu parceiro virtual. üòâ")
st.write("T√¥ aqui pra trocar ideia e te ajudar no que for poss√≠vel!")

# --- Inicializa√ß√£o do Hist√≥rico de Conversa (Session State) ---
if 'messages' not in st.session_state:
    st.session_state.messages = []
# Vari√°vel para armazenar a pergunta pr√©-preenchida
if 'pre_filled_prompt' not in st.session_state:
    st.session_state.pre_filled_prompt = ""

# --- Exibir Hist√≥rico de Conversa (√Årea Principal) ---
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# --- Entrada de Texto para o Usu√°rio (√Årea Principal) ---
# O 'value' do chat_input agora √© preenchido pela session_state.pre_filled_prompt
prompt = st.chat_input("Pergunte algo ao GATEBOT...", value=st.session_state.pre_filled_prompt)

# Se o usu√°rio digitou ou um bot√£o preencheu o prompt, processa
if prompt:
    # Zera o pre_filled_prompt para que n√£o fique preenchido na pr√≥xima intera√ß√£o
    st.session_state.pre_filled_prompt = ""

    # Adiciona a pergunta do usu√°rio ao hist√≥rico e exibe
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # Gera a resposta do Gemini
    with st.chat_message("assistant"):
        with st.spinner("Pensando..."): # Mostra um spinner enquanto o Gemini pensa
            response = get_gemini_response(prompt) # Chama a fun√ß√£o que interage com a API do Gemini
        st.markdown(response) # Exibe a resposta do Gemini

    # Adiciona a resposta do Gemini ao hist√≥rico
    st.session_state.messages.append({"role": "assistant", "content": response})


# --- Conte√∫do da Sidebar (Barra Lateral) ---
with st.sidebar:
    st.image("https://raw.githubusercontent.com/brun372/gatebot-online/main/B5w10V3.PNG", width=100) # Mini logo ou robo na sidebar
    st.title("GATEBOT Menu")
    st.markdown("---") # Linha divis√≥ria

    st.header("√Åreas de Conhecimento:")

    # Bot√µes para cada √°rea que pr√©-preenchem o prompt
    if st.button("üìö Educa√ß√£o"):
        st.session_state.messages = [] # Limpa hist√≥rico para nova √°rea
        st.session_state.pre_filled_prompt = "Me conte sobre a Segunda Guerra Mundial."
        st.experimental_rerun() # Recarrega a p√°gina para o prompt ser preenchido

    if st.button("üí° Ideias"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "Gere ideias para um projeto de aplicativo de finan√ßas."
        st.experimental_rerun()

    if st.button("üë®‚Äçüíª Programa√ß√£o"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "Qual a diferen√ßa entre Python e JavaScript?"
        st.experimental_rerun()

    if st.button("üåç Not√≠cias/Atualidades"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "Quais as not√≠cias mais importantes de hoje?"
        st.experimental_rerun()

    if st.button("ü§î Curiosidades"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "Me diga uma curiosidade interessante sobre o espa√ßo."
        st.experimental_rerun()

    if st.button("‚ù§Ô∏è‚Äçü©π Bem-Estar"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "D√™ dicas para melhorar a qualidade do sono."
        st.experimental_rerun()

    if st.button("üé≤ Jogos/Entretenimento"):
        st.session_state.messages = []
        st.session_state.pre_filled_prompt = "Sugira um jogo online gratuito divertido."
        st.experimental_rerun()

    st.markdown("---") # Outra linha divis√≥ria

    # Bot√£o Limpar Conversa (dentro da sidebar para organizar melhor)
    if st.button("Limpar Conversa"): # Pode ter um texto diferente para diferenciar dos outros bot√µes
        st.session_state.messages = []  # Zera o hist√≥rico de mensagens
        st.session_state.pre_filled_prompt = "" # Limpa tamb√©m o prompt pr√©-preenchido
        st.experimental_rerun()         # Recarrega o aplicativo para refletir a mudan√ßa

    st.markdown("---") # Mais uma linha divis√≥ria
    st.write("Desenvolvido por Bruno Gabriel") # Sua assinatura
